syntax = "proto3";

option go_package = "github.com/lobis/baldosas-server/proto";

package main;

message Empty {}

message Positions {
  repeated Position positions = 1;
}

message Position {
  int32 x = 1;
  int32 y = 2;
}

message Color {
  int32 r = 1;
  int32 g = 2;
  int32 b = 3;
}

message Light {
  Color active = 1;
  Color inactive = 2;
}

message LightStatus {
  Position position = 1;
  Light status = 2;
}

message LightsStatus {
  repeated LightStatus lights = 1;
}

message SensorStatus {
  Position position = 1;
  bool status = 2;
}

message Brightness {
  Position position = 1;
  uint32 brightness = 2; // 0 - 255
}

message BrightnessStatus {
  repeated Brightness brightness = 1;
}

service PositionsService {
  rpc GetPositions(Empty) returns (Positions) {}
}

// server stream sends sensor status updates
service SensorService {
  rpc GetSensorStatusUpdates(Empty) returns (stream SensorStatus) {}
}

// server stream sends light status updates
service LightService {
  rpc GetLightStatusUpdates(Empty) returns (stream LightStatus) {}
}

service SetLightsService {
  rpc SetLights(LightsStatus) returns (Empty) {}
}

service SetBrightnessService {
  rpc SetBrightness(BrightnessStatus) returns (Empty) {}
}

// same but as a client stream
service SetLightsStreamService {
  rpc SetLightsStream(stream LightsStatus) returns (Empty) {}
}
